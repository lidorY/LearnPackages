name: run test

on:
  workflow_dispatch: {}
  pull_request:
    types: [ opened, reopened, synchronize ]
  # workflow_run:
  #   workflows: [Publish Tests container Docker Image]

jobs:
 end2end_test:
   strategy:
    max-parallel: 1
   name: test
   runs-on: ubuntu-latest
   permissions:
      packages: write
  #  container:
  #    image: ghcr.io/lidory/learnpackages/img1:main
  #    credentials:
  #      username: ${{ github.actor }}
  #      password: ${{ secrets.GITHUB_TOKEN }}
   steps:
    - name: Checkout
      uses: actions/checkout@v2 # Required to mount the Github Workspace to a volume
      
      
    - name: Wait for build to succeed
      uses: fountainhead/action-wait-for-check@v1.1.0
      id: wait-for-build
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        checkName: 'Push Docker image to GitHub registry'
        ref: ${{ github.event.pull_request.head.sha || github.sha }}

    # - name: Log in to the Container registry
    #   uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}
    # - name: run
    #   run: |
    #     docker-compose -f docker-compose.yml up
  
  
  test_container_image:
    strategy:
      max-parallel: 1
    name: test_container_image
    container:
     image: ghcr.io/lidory/learnpackages/img1:main
     credentials:
       username: ${{ github.actor }}
       password: ${{ secrets.GITHUB_TOKEN }}
    steps:
     - name: Checkout
       uses: actions/checkout@v2 # Required to mount the Github Workspace to a volume
     - run: ${{ env.LIDOR }}
       shell: bash 

    # - uses: ./.github/actions/set_vars
    # - name: Analysing the code with mypy
    #   run: |
    #     mypy . --show-error-codes
    #     echo "${{ env.TEST }}"
    #     echo $HOME
        